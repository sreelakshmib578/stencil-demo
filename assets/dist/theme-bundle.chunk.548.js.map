{"version":3,"file":"theme-bundle.chunk.548.js","mappings":"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","sources":["webpack://bigcommerce-cornerstone/./assets/js/theme/auth.js","webpack://bigcommerce-cornerstone/./assets/js/theme/common/form-validation.js","webpack://bigcommerce-cornerstone/./assets/js/theme/common/state-country.js","webpack://bigcommerce-cornerstone/./assets/js/theme/common/utils/translations-utils.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_arrayEach.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_baseCreate.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_baseFor.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_baseForOwn.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_baseIteratee.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_createBaseFor.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/keys.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/transform.js"],"sourcesContent":["import PageManager from './page-manager';\nimport stateCountry from './common/state-country';\nimport nod from './common/nod';\nimport validation from './common/form-validation';\nimport forms from './common/models/forms';\nimport {\n    classifyForm,\n    Validators,\n    createPasswordValidationErrorTextObject,\n    announceInputErrorMessage,\n} from './common/utils/form-utils';\nimport { createTranslationDictionary } from './common/utils/translations-utils';\n\nexport default class Auth extends PageManager {\n    constructor(context) {\n        super(context);\n        this.validationDictionary = createTranslationDictionary(context);\n        this.formCreateSelector = 'form[data-create-account-form]';\n        this.recaptcha = $('.g-recaptcha iframe[src]');\n    }\n\n    registerLoginValidation($loginForm) {\n        const loginModel = forms;\n\n        this.loginValidator = nod({\n            submit: '.login-form input[type=\"submit\"]',\n            tap: announceInputErrorMessage,\n        });\n\n        this.loginValidator.add([\n            {\n                selector: '.login-form input[name=\"login_email\"]',\n                validate: (cb, val) => {\n                    const result = loginModel.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.useValidEmail,\n            },\n            {\n                selector: '.login-form input[name=\"login_pass\"]',\n                validate: (cb, val) => {\n                    const result = loginModel.password(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.enterPass,\n            },\n        ]);\n\n        $loginForm.on('submit', event => {\n            this.loginValidator.performCheck();\n\n            if (this.loginValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    registerForgotPasswordValidation($forgotPasswordForm) {\n        this.forgotPasswordValidator = nod({\n            submit: '.forgot-password-form input[type=\"submit\"]',\n            tap: announceInputErrorMessage,\n        });\n\n        this.forgotPasswordValidator.add([\n            {\n                selector: '.forgot-password-form input[name=\"email\"]',\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.useValidEmail,\n            },\n        ]);\n\n        $forgotPasswordForm.on('submit', event => {\n            this.forgotPasswordValidator.performCheck();\n\n            if (this.forgotPasswordValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    registerNewPasswordValidation() {\n        const { password: enterPassword, password_match: matchPassword } = this.validationDictionary;\n        const newPasswordForm = '.new-password-form';\n        const newPasswordValidator = nod({\n            submit: $(`${newPasswordForm} input[type=\"submit\"]`),\n            tap: announceInputErrorMessage,\n        });\n        const passwordSelector = $(`${newPasswordForm} input[name=\"password\"]`);\n        const password2Selector = $(`${newPasswordForm} input[name=\"password_confirm\"]`);\n        const errorTextMessages = createPasswordValidationErrorTextObject(enterPassword, enterPassword, matchPassword, this.passwordRequirements.error);\n        Validators.setPasswordValidation(\n            newPasswordValidator,\n            passwordSelector,\n            password2Selector,\n            this.passwordRequirements,\n            errorTextMessages,\n        );\n    }\n\n    registerCreateAccountValidator($createAccountForm) {\n        const validationModel = validation($createAccountForm, this.context);\n        const createAccountValidator = nod({\n            submit: `${this.formCreateSelector} input[type='submit']`,\n            delay: 900,\n        });\n        const $stateElement = $('[data-field-type=\"State\"]');\n        const emailSelector = `${this.formCreateSelector} [data-field-type='EmailAddress']`;\n        const $emailElement = $(emailSelector);\n        const passwordSelector = `${this.formCreateSelector} [data-field-type='Password']`;\n        const $passwordElement = $(passwordSelector);\n        const password2Selector = `${this.formCreateSelector} [data-field-type='ConfirmPassword']`;\n        const $password2Element = $(password2Selector);\n\n        createAccountValidator.add(validationModel);\n\n        if ($stateElement) {\n            let $last;\n\n            // Requests the states for a country with AJAX\n            stateCountry($stateElement, this.context, (err, field) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                const $field = $(field);\n\n                if (createAccountValidator.getStatus($stateElement) !== 'undefined') {\n                    createAccountValidator.remove($stateElement);\n                }\n\n                if ($last) {\n                    createAccountValidator.remove($last);\n                }\n\n                if ($field.is('select')) {\n                    $last = field;\n                    Validators.setStateCountryValidation(createAccountValidator, field, this.validationDictionary.field_not_blank);\n                } else {\n                    Validators.cleanUpStateValidation(field);\n                }\n            });\n        }\n\n        if ($emailElement) {\n            createAccountValidator.remove(emailSelector);\n            Validators.setEmailValidation(createAccountValidator, emailSelector, this.validationDictionary.valid_email);\n        }\n\n        if ($passwordElement && $password2Element) {\n            const { password: enterPassword, password_match: matchPassword } = this.validationDictionary;\n\n            createAccountValidator.remove(passwordSelector);\n            createAccountValidator.remove(password2Selector);\n            Validators.setPasswordValidation(\n                createAccountValidator,\n                passwordSelector,\n                password2Selector,\n                this.passwordRequirements,\n                createPasswordValidationErrorTextObject(enterPassword, enterPassword, matchPassword, this.passwordRequirements.error),\n            );\n        }\n\n        $createAccountForm.on('submit', (event) => {\n            this.submitAction(event, createAccountValidator);\n        });\n    }\n\n    submitAction(event, validator) {\n        validator.performCheck();\n\n        if (validator.areAll('valid')) {\n            return;\n        }\n        event.preventDefault();\n        setTimeout(() => {\n            const earliestError = $('span.form-inlineMessage:first').prev('input');\n            earliestError.focus();\n        }, 900);\n    }\n\n    /**\n     * Request is made in this function to the remote endpoint and pulls back the states for country.\n     */\n    onReady() {\n        if (!this.recaptcha.attr('title')) {\n            this.recaptcha.attr('title', this.context.recaptchaTitle);\n        }\n\n        const $createAccountForm = classifyForm(this.formCreateSelector);\n        const $loginForm = classifyForm('.login-form');\n        const $forgotPasswordForm = classifyForm('.forgot-password-form');\n        const $newPasswordForm = classifyForm('.new-password-form'); // reset password\n\n        // Injected via auth.html\n        this.passwordRequirements = this.context.passwordRequirements;\n\n        if ($loginForm.length) {\n            this.registerLoginValidation($loginForm);\n        }\n\n        if ($newPasswordForm.length) {\n            this.registerNewPasswordValidation();\n        }\n\n        if ($forgotPasswordForm.length) {\n            this.registerForgotPasswordValidation($forgotPasswordForm);\n        }\n\n        if ($createAccountForm.length) {\n            this.registerCreateAccountValidator($createAccountForm);\n        }\n    }\n}\n","import { createTranslationDictionary } from './utils/translations-utils';\n\n/**\n * Validate that the given date for the day/month/year select inputs is within potential range\n * @param $formField\n * @param validation\n * @returns {{selector: string, triggeredBy: string, validate: Function, errorMessage: string}}\n */\nfunction buildDateValidation($formField, validation, requiredMessage) {\n    // No date range restriction, skip\n    if (validation.min_date && validation.max_date) {\n        const invalidMessage = `Your chosen date must fall between ${validation.min_date} and ${validation.max_date}.`;\n        const formElementId = $formField.attr('id');\n        const minSplit = validation.min_date.split('-');\n        const maxSplit = validation.max_date.split('-');\n        const minDate = new Date(minSplit[0], minSplit[1] - 1, minSplit[2]);\n        const maxDate = new Date(maxSplit[0], maxSplit[1] - 1, maxSplit[2]);\n\n        return {\n            selector: `#${formElementId} select[data-label=\"year\"]`,\n            triggeredBy: `#${formElementId} select:not([data-label=\"year\"])`,\n            validate: (cb, val) => {\n                const day = Number($formField.find('select[data-label=\"day\"]').val());\n                const month = Number($formField.find('select[data-label=\"month\"]').val()) - 1;\n                const year = Number(val);\n                const chosenDate = new Date(year, month, day);\n\n                cb(chosenDate >= minDate && chosenDate <= maxDate);\n            },\n            errorMessage: invalidMessage,\n        };\n    }\n    // Required Empty Date field\n    if (validation.required && (!validation.min_date || !validation.max_date)) {\n        const formElementId = $formField.attr('id');\n\n        return {\n            selector: `#${formElementId} select[data-label=\"year\"]`,\n            triggeredBy: `#${formElementId} select:not([data-label=\"year\"])`,\n            validate: (cb, val) => {\n                const day = $formField.find('select[data-label=\"day\"]').val();\n                const month = $formField.find('select[data-label=\"month\"]').val();\n                const year = val;\n\n                cb(day && month && year);\n            },\n            errorMessage: requiredMessage,\n        };\n    }\n}\n\n/**\n * We validate checkboxes separately from single input fields, as they must have at least one checked option\n * from many different inputs\n * @param $formField\n * @param validation\n * @param errorText provides error validation message\n */\nfunction buildRequiredCheckboxValidation(validation, $formField, errorText) {\n    const formFieldId = $formField.attr('id');\n    const primarySelector = `#${formFieldId} input:first-of-type`;\n    const secondarySelector = `#${formFieldId} input`;\n\n    return {\n        selector: primarySelector,\n        triggeredBy: secondarySelector,\n        validate: (cb) => {\n            let result = false;\n\n            $(secondarySelector).each((index, checkbox) => {\n                if (checkbox.checked) {\n                    result = true;\n\n                    return false;\n                }\n            });\n\n            cb(result);\n        },\n        errorMessage: errorText,\n    };\n}\n\nfunction buildRequiredValidation(validation, selector, errorText) {\n    return {\n        selector,\n        validate(cb, val) {\n            cb(val.length > 0);\n        },\n        errorMessage: errorText,\n    };\n}\n\nfunction buildNumberRangeValidation(validation, formFieldSelector) {\n    const invalidMessage = `The value for ${validation.label} must be between ${validation.min} and ${validation.max}.`;\n    const min = Number(validation.min);\n    const max = Number(validation.max);\n\n    return {\n        selector: `${formFieldSelector} input[name=\"${validation.name}\"]`,\n        validate: (cb, val) => {\n            const numberVal = Number(val);\n\n            cb(numberVal >= min && numberVal <= max);\n        },\n        errorMessage: invalidMessage,\n    };\n}\n\n\nfunction buildValidation($validateableElement, errorMessage) {\n    const validation = $validateableElement.data('validation');\n    const fieldValidations = [];\n    const formFieldSelector = `#${$validateableElement.attr('id')}`;\n\n    if (validation.type === 'datechooser') {\n        const dateValidation = buildDateValidation($validateableElement, validation, errorMessage);\n\n        if (dateValidation) {\n            fieldValidations.push(dateValidation);\n        }\n    } else if (validation.required && (validation.type === 'checkboxselect' || validation.type === 'radioselect')) {\n        fieldValidations.push(buildRequiredCheckboxValidation(validation, $validateableElement, errorMessage));\n    } else {\n        $validateableElement.find('input, select, textarea').each((index, element) => {\n            const $inputElement = $(element);\n            const tagName = $inputElement.get(0).tagName;\n            const inputName = $inputElement.attr('name');\n            const elementSelector = `${formFieldSelector} ${tagName}[name=\"${inputName}\"]`;\n\n            if (validation.type === 'numberonly') {\n                fieldValidations.push(buildNumberRangeValidation(validation, formFieldSelector));\n            }\n            if (validation.required) {\n                fieldValidations.push(buildRequiredValidation(validation, elementSelector, errorMessage));\n            }\n        });\n    }\n\n    return fieldValidations;\n}\n\n/**\n * Builds the validation model for dynamic forms\n * @param $form\n * @param context provides access for error messages on required fields validation\n * @returns {Array}\n */\nexport default function ($form, context) {\n    let validationsToPerform = [];\n    const { field_not_blank: requiredFieldValidationText } = createTranslationDictionary(context);\n\n    $form.find('[data-validation]').each((index, input) => {\n        const getLabel = $el => $el.first().data('validation').label;\n        const requiredValidationMessage = getLabel($(input)) + requiredFieldValidationText;\n\n        validationsToPerform = validationsToPerform.concat(buildValidation($(input), requiredValidationMessage));\n    });\n\n    return validationsToPerform;\n}\n","import utils from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport { insertStateHiddenField } from './utils/form-utils';\nimport { showAlertModal } from '../global/modal';\n\n/**\n * If there are no options from bcapp, a text field will be sent. This will create a select element to hold options after the remote request.\n * @returns {jQuery|HTMLElement}\n */\nfunction makeStateRequired(stateElement, context) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n        return ret;\n    });\n\n    const replacementAttributes = {\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-select',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<select></select>', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n    const $hiddenInput = $('[name*=\"FormFieldIsText\"]');\n\n    if ($hiddenInput.length !== 0) {\n        $hiddenInput.remove();\n    }\n\n    if ($newElement.prev().find('small').length === 0) {\n        // String is injected from localizer\n        $newElement.prev().append(`<small>${context.required}</small>`);\n    } else {\n        $newElement.prev().find('small').show();\n    }\n\n    return $newElement;\n}\n\n/**\n * If a country with states is the default, a select will be sent,\n * In this case we need to be able to switch to an input field and hide the required field\n */\nfunction makeStateOptional(stateElement) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n\n        return ret;\n    });\n\n    const replacementAttributes = {\n        type: 'text',\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-input',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<input />', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n\n    if ($newElement.length !== 0) {\n        insertStateHiddenField($newElement);\n        $newElement.prev().find('small').hide();\n    }\n\n    return $newElement;\n}\n\n/**\n * Adds the array of options from the remote request to the newly created select box.\n * @param {Object} statesArray\n * @param {jQuery} $selectElement\n * @param {Object} options\n */\nfunction addOptions(statesArray, $selectElement, options) {\n    const container = [];\n\n    container.push(`<option value=\"\">${statesArray.prefix}</option>`);\n\n    if (!_.isEmpty($selectElement)) {\n        statesArray.states.forEach((stateObj) => {\n            if (options.useIdForStates) {\n                container.push(`<option value=\"${stateObj.id}\">${stateObj.name}</option>`);\n            } else {\n                container.push(`<option value=\"${stateObj.name}\">${stateObj.label ? stateObj.label : stateObj.name}</option>`);\n            }\n        });\n\n        $selectElement.html(container.join(' '));\n    }\n}\n\n/**\n *\n * @param {jQuery} stateElement\n * @param {Object} context\n * @param {Object} options\n * @param {Function} callback\n */\nexport default function (stateElement, context = {}, options, callback) {\n    /**\n     * Backwards compatible for three parameters instead of four\n     *\n     * Available options:\n     *\n     * useIdForStates {Bool} - Generates states dropdown using id for values instead of strings\n     */\n    if (typeof options === 'function') {\n        /* eslint-disable no-param-reassign */\n        callback = options;\n        options = {};\n        /* eslint-enable no-param-reassign */\n    }\n\n    $('select[data-field-type=\"Country\"]').on('change', event => {\n        const countryName = $(event.currentTarget).val();\n\n        if (countryName === '') {\n            return;\n        }\n\n        utils.api.country.getByName(countryName, (err, response) => {\n            if (err) {\n                showAlertModal(context.state_error);\n                return callback(err);\n            }\n\n            const $currentInput = $('[data-field-type=\"State\"]');\n\n            if (!_.isEmpty(response.data.states)) {\n                // The element may have been replaced with a select, reselect it\n                const $selectElement = makeStateRequired($currentInput, context);\n\n                addOptions(response.data, $selectElement, options);\n                callback(null, $selectElement);\n            } else {\n                const newElement = makeStateOptional($currentInput, context);\n\n                callback(null, newElement);\n            }\n        });\n    });\n}\n","const TRANSLATIONS = 'translations';\nconst isTranslationDictionaryNotEmpty = (dictionary) => !!Object.keys(dictionary[TRANSLATIONS]).length;\nconst chooseActiveDictionary = (...dictionaryJsonList) => {\n    for (let i = 0; i < dictionaryJsonList.length; i++) {\n        const dictionary = JSON.parse(dictionaryJsonList[i]);\n        if (isTranslationDictionaryNotEmpty(dictionary)) {\n            return dictionary;\n        }\n    }\n};\n\n/**\n * defines Translation Dictionary to use\n * @param context provides access to 3 validation JSONs from en.json:\n * validation_messages, validation_fallback_messages and default_messages\n * @returns {Object}\n */\nexport const createTranslationDictionary = (context) => {\n    const { validationDictionaryJSON, validationFallbackDictionaryJSON, validationDefaultDictionaryJSON } = context;\n    const activeDictionary = chooseActiveDictionary(validationDictionaryJSON, validationFallbackDictionaryJSON, validationDefaultDictionaryJSON);\n    const localizations = Object.values(activeDictionary[TRANSLATIONS]);\n    const translationKeys = Object.keys(activeDictionary[TRANSLATIONS]).map(key => key.split('.').pop());\n\n    return translationKeys.reduce((acc, key, i) => {\n        acc[key] = localizations[i];\n        return acc;\n    }, {});\n};\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n"],"names":["Auth","_PageManager","context","_this","call","validationDictionary","createTranslationDictionary","formCreateSelector","recaptcha","$","_proto","prototype","registerLoginValidation","$loginForm","_this2","loginModel","forms","this","loginValidator","nod","submit","tap","announceInputErrorMessage","add","selector","validate","cb","val","email","errorMessage","useValidEmail","password","enterPass","on","event","performCheck","areAll","preventDefault","registerForgotPasswordValidation","$forgotPasswordForm","_this3","forgotPasswordValidator","registerNewPasswordValidation","_this$validationDicti","enterPassword","matchPassword","password_match","newPasswordForm","newPasswordValidator","passwordSelector","password2Selector","errorTextMessages","createPasswordValidationErrorTextObject","passwordRequirements","error","Validators","registerCreateAccountValidator","$createAccountForm","$last","_this4","validationModel","validation","createAccountValidator","delay","$stateElement","emailSelector","$emailElement","$passwordElement","$password2Element","stateCountry","err","field","Error","$field","getStatus","remove","is","field_not_blank","valid_email","_this$validationDicti2","submitAction","validator","setTimeout","prev","focus","onReady","attr","recaptchaTitle","classifyForm","$newPasswordForm","length","PageManager","$form","validationsToPerform","requiredFieldValidationText","find","each","index","input","requiredValidationMessage","first","data","label","concat","$validateableElement","errorText","formFieldId","secondarySelector","fieldValidations","formFieldSelector","type","dateValidation","$formField","requiredMessage","min_date","max_date","invalidMessage","formElementId","minSplit","split","maxSplit","minDate","Date","maxDate","triggeredBy","day","Number","month","year","chosenDate","required","buildDateValidation","push","element","$inputElement","tagName","get","inputName","elementSelector","min","max","name","numberVal","buildNumberRangeValidation","buildRequiredValidation","result","checkbox","checked","buildValidation","stateElement","options","callback","countryName","currentTarget","utils","response","showAlertModal","state_error","$currentInput","_isEmpty","states","newElement","attrs","_transform","prop","item","ret","value","replacementAttributes","id","class","replaceWith","$newElement","insertStateHiddenField","hide","makeStateOptional","$selectElement","$hiddenInput","append","show","makeStateRequired","statesArray","container","prefix","forEach","stateObj","useIdForStates","html","join","addOptions","TRANSLATIONS","isTranslationDictionaryNotEmpty","dictionary","Object","keys","activeDictionary","i","arguments","JSON","parse","undefined","chooseActiveDictionary","validationDictionaryJSON","validationFallbackDictionaryJSON","validationDefaultDictionaryJSON","localizations","values","map","key","pop","reduce","acc","module","exports","array","iteratee","isObject","objectCreate","create","baseCreate","object","proto","baseFor","createBaseFor","fromRight","keysFunc","iterable","props","nativeKeys","overArg","arrayEach","baseForOwn","baseIteratee","getPrototype","isArray","isBuffer","isFunction","isTypedArray","accumulator","isArr","isArrLike","Ctor","constructor"],"sourceRoot":""}